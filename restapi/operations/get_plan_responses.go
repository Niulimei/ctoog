// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// GetPlanOKCode is the HTTP code returned for type GetPlanOK
const GetPlanOKCode int = 200

/*GetPlanOK 迁移计划信息

swagger:response getPlanOK
*/
type GetPlanOK struct {

	/*
	  In: Body
	*/
	Payload *models.PlanModel `json:"body,omitempty"`
}

// NewGetPlanOK creates GetPlanOK with default headers values
func NewGetPlanOK() *GetPlanOK {

	return &GetPlanOK{}
}

// WithPayload adds the payload to the get plan o k response
func (o *GetPlanOK) WithPayload(payload *models.PlanModel) *GetPlanOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plan o k response
func (o *GetPlanOK) SetPayload(payload *models.PlanModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlanOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPlanInternalServerErrorCode is the HTTP code returned for type GetPlanInternalServerError
const GetPlanInternalServerErrorCode int = 500

/*GetPlanInternalServerError 内部错误

swagger:response getPlanInternalServerError
*/
type GetPlanInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewGetPlanInternalServerError creates GetPlanInternalServerError with default headers values
func NewGetPlanInternalServerError() *GetPlanInternalServerError {

	return &GetPlanInternalServerError{}
}

// WithPayload adds the payload to the get plan internal server error response
func (o *GetPlanInternalServerError) WithPayload(payload *models.ErrorModel) *GetPlanInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plan internal server error response
func (o *GetPlanInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
