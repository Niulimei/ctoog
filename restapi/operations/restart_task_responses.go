// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// RestartTaskOKCode is the HTTP code returned for type RestartTaskOK
const RestartTaskOKCode int = 200

/*RestartTaskOK 任务列表

swagger:response restartTaskOK
*/
type RestartTaskOK struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewRestartTaskOK creates RestartTaskOK with default headers values
func NewRestartTaskOK() *RestartTaskOK {

	return &RestartTaskOK{}
}

// WithPayload adds the payload to the restart task o k response
func (o *RestartTaskOK) WithPayload(payload *models.OK) *RestartTaskOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restart task o k response
func (o *RestartTaskOK) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestartTaskOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestartTaskInternalServerErrorCode is the HTTP code returned for type RestartTaskInternalServerError
const RestartTaskInternalServerErrorCode int = 500

/*RestartTaskInternalServerError 内部错误

swagger:response restartTaskInternalServerError
*/
type RestartTaskInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewRestartTaskInternalServerError creates RestartTaskInternalServerError with default headers values
func NewRestartTaskInternalServerError() *RestartTaskInternalServerError {

	return &RestartTaskInternalServerError{}
}

// WithPayload adds the payload to the restart task internal server error response
func (o *RestartTaskInternalServerError) WithPayload(payload *models.ErrorModel) *RestartTaskInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restart task internal server error response
func (o *RestartTaskInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestartTaskInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
