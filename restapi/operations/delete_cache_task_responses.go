// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// DeleteCacheTaskOKCode is the HTTP code returned for type DeleteCacheTaskOK
const DeleteCacheTaskOKCode int = 200

/*DeleteCacheTaskOK 成功

swagger:response deleteCacheTaskOK
*/
type DeleteCacheTaskOK struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewDeleteCacheTaskOK creates DeleteCacheTaskOK with default headers values
func NewDeleteCacheTaskOK() *DeleteCacheTaskOK {

	return &DeleteCacheTaskOK{}
}

// WithPayload adds the payload to the delete cache task o k response
func (o *DeleteCacheTaskOK) WithPayload(payload *models.OK) *DeleteCacheTaskOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cache task o k response
func (o *DeleteCacheTaskOK) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCacheTaskOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCacheTaskInternalServerErrorCode is the HTTP code returned for type DeleteCacheTaskInternalServerError
const DeleteCacheTaskInternalServerErrorCode int = 500

/*DeleteCacheTaskInternalServerError 内部错误

swagger:response deleteCacheTaskInternalServerError
*/
type DeleteCacheTaskInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewDeleteCacheTaskInternalServerError creates DeleteCacheTaskInternalServerError with default headers values
func NewDeleteCacheTaskInternalServerError() *DeleteCacheTaskInternalServerError {

	return &DeleteCacheTaskInternalServerError{}
}

// WithPayload adds the payload to the delete cache task internal server error response
func (o *DeleteCacheTaskInternalServerError) WithPayload(payload *models.ErrorModel) *DeleteCacheTaskInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cache task internal server error response
func (o *DeleteCacheTaskInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCacheTaskInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
