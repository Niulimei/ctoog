// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// UpdatePlanCreatedCode is the HTTP code returned for type UpdatePlanCreated
const UpdatePlanCreatedCode int = 201

/*UpdatePlanCreated 成功

swagger:response updatePlanCreated
*/
type UpdatePlanCreated struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewUpdatePlanCreated creates UpdatePlanCreated with default headers values
func NewUpdatePlanCreated() *UpdatePlanCreated {

	return &UpdatePlanCreated{}
}

// WithPayload adds the payload to the update plan created response
func (o *UpdatePlanCreated) WithPayload(payload *models.OK) *UpdatePlanCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update plan created response
func (o *UpdatePlanCreated) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlanCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePlanInternalServerErrorCode is the HTTP code returned for type UpdatePlanInternalServerError
const UpdatePlanInternalServerErrorCode int = 500

/*UpdatePlanInternalServerError 内部错误

swagger:response updatePlanInternalServerError
*/
type UpdatePlanInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdatePlanInternalServerError creates UpdatePlanInternalServerError with default headers values
func NewUpdatePlanInternalServerError() *UpdatePlanInternalServerError {

	return &UpdatePlanInternalServerError{}
}

// WithPayload adds the payload to the update plan internal server error response
func (o *UpdatePlanInternalServerError) WithPayload(payload *models.ErrorModel) *UpdatePlanInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update plan internal server error response
func (o *UpdatePlanInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
