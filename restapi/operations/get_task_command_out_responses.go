// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// GetTaskCommandOutOKCode is the HTTP code returned for type GetTaskCommandOutOK
const GetTaskCommandOutOKCode int = 200

/*GetTaskCommandOutOK 任务执行信息

swagger:response getTaskCommandOutOK
*/
type GetTaskCommandOutOK struct {

	/*
	  In: Body
	*/
	Payload *models.TaskCommandOut `json:"body,omitempty"`
}

// NewGetTaskCommandOutOK creates GetTaskCommandOutOK with default headers values
func NewGetTaskCommandOutOK() *GetTaskCommandOutOK {

	return &GetTaskCommandOutOK{}
}

// WithPayload adds the payload to the get task command out o k response
func (o *GetTaskCommandOutOK) WithPayload(payload *models.TaskCommandOut) *GetTaskCommandOutOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get task command out o k response
func (o *GetTaskCommandOutOK) SetPayload(payload *models.TaskCommandOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTaskCommandOutOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTaskCommandOutInternalServerErrorCode is the HTTP code returned for type GetTaskCommandOutInternalServerError
const GetTaskCommandOutInternalServerErrorCode int = 500

/*GetTaskCommandOutInternalServerError 内部错误

swagger:response getTaskCommandOutInternalServerError
*/
type GetTaskCommandOutInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewGetTaskCommandOutInternalServerError creates GetTaskCommandOutInternalServerError with default headers values
func NewGetTaskCommandOutInternalServerError() *GetTaskCommandOutInternalServerError {

	return &GetTaskCommandOutInternalServerError{}
}

// WithPayload adds the payload to the get task command out internal server error response
func (o *GetTaskCommandOutInternalServerError) WithPayload(payload *models.ErrorModel) *GetTaskCommandOutInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get task command out internal server error response
func (o *GetTaskCommandOutInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTaskCommandOutInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
