// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// UpdateSvnNamePairCreatedCode is the HTTP code returned for type UpdateSvnNamePairCreated
const UpdateSvnNamePairCreatedCode int = 201

/*UpdateSvnNamePairCreated 成功

swagger:response updateSvnNamePairCreated
*/
type UpdateSvnNamePairCreated struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewUpdateSvnNamePairCreated creates UpdateSvnNamePairCreated with default headers values
func NewUpdateSvnNamePairCreated() *UpdateSvnNamePairCreated {

	return &UpdateSvnNamePairCreated{}
}

// WithPayload adds the payload to the update svn name pair created response
func (o *UpdateSvnNamePairCreated) WithPayload(payload *models.OK) *UpdateSvnNamePairCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update svn name pair created response
func (o *UpdateSvnNamePairCreated) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSvnNamePairCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateSvnNamePairInternalServerErrorCode is the HTTP code returned for type UpdateSvnNamePairInternalServerError
const UpdateSvnNamePairInternalServerErrorCode int = 500

/*UpdateSvnNamePairInternalServerError 内部错误

swagger:response updateSvnNamePairInternalServerError
*/
type UpdateSvnNamePairInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdateSvnNamePairInternalServerError creates UpdateSvnNamePairInternalServerError with default headers values
func NewUpdateSvnNamePairInternalServerError() *UpdateSvnNamePairInternalServerError {

	return &UpdateSvnNamePairInternalServerError{}
}

// WithPayload adds the payload to the update svn name pair internal server error response
func (o *UpdateSvnNamePairInternalServerError) WithPayload(payload *models.ErrorModel) *UpdateSvnNamePairInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update svn name pair internal server error response
func (o *UpdateSvnNamePairInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSvnNamePairInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
