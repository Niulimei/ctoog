// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// DeleteTaskOKCode is the HTTP code returned for type DeleteTaskOK
const DeleteTaskOKCode int = 200

/*DeleteTaskOK 成功

swagger:response deleteTaskOK
*/
type DeleteTaskOK struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewDeleteTaskOK creates DeleteTaskOK with default headers values
func NewDeleteTaskOK() *DeleteTaskOK {

	return &DeleteTaskOK{}
}

// WithPayload adds the payload to the delete task o k response
func (o *DeleteTaskOK) WithPayload(payload *models.OK) *DeleteTaskOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete task o k response
func (o *DeleteTaskOK) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTaskOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTaskInternalServerErrorCode is the HTTP code returned for type DeleteTaskInternalServerError
const DeleteTaskInternalServerErrorCode int = 500

/*DeleteTaskInternalServerError 内部错误

swagger:response deleteTaskInternalServerError
*/
type DeleteTaskInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewDeleteTaskInternalServerError creates DeleteTaskInternalServerError with default headers values
func NewDeleteTaskInternalServerError() *DeleteTaskInternalServerError {

	return &DeleteTaskInternalServerError{}
}

// WithPayload adds the payload to the delete task internal server error response
func (o *DeleteTaskInternalServerError) WithPayload(payload *models.ErrorModel) *DeleteTaskInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete task internal server error response
func (o *DeleteTaskInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTaskInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
