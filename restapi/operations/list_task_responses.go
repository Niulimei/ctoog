// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// ListTaskOKCode is the HTTP code returned for type ListTaskOK
const ListTaskOKCode int = 200

/*ListTaskOK 任务列表

swagger:response listTaskOK
*/
type ListTaskOK struct {

	/*
	  In: Body
	*/
	Payload *models.TaskPageInfoModel `json:"body,omitempty"`
}

// NewListTaskOK creates ListTaskOK with default headers values
func NewListTaskOK() *ListTaskOK {

	return &ListTaskOK{}
}

// WithPayload adds the payload to the list task o k response
func (o *ListTaskOK) WithPayload(payload *models.TaskPageInfoModel) *ListTaskOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list task o k response
func (o *ListTaskOK) SetPayload(payload *models.TaskPageInfoModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTaskOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListTaskInternalServerErrorCode is the HTTP code returned for type ListTaskInternalServerError
const ListTaskInternalServerErrorCode int = 500

/*ListTaskInternalServerError 内部错误

swagger:response listTaskInternalServerError
*/
type ListTaskInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewListTaskInternalServerError creates ListTaskInternalServerError with default headers values
func NewListTaskInternalServerError() *ListTaskInternalServerError {

	return &ListTaskInternalServerError{}
}

// WithPayload adds the payload to the list task internal server error response
func (o *ListTaskInternalServerError) WithPayload(payload *models.ErrorModel) *ListTaskInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list task internal server error response
func (o *ListTaskInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTaskInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
