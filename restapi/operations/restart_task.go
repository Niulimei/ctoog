// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RestartTaskHandlerFunc turns a function with the right signature into a restart task handler
type RestartTaskHandlerFunc func(RestartTaskParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RestartTaskHandlerFunc) Handle(params RestartTaskParams) middleware.Responder {
	return fn(params)
}

// RestartTaskHandler interface for that can handle valid restart task params
type RestartTaskHandler interface {
	Handle(RestartTaskParams) middleware.Responder
}

// NewRestartTask creates a new http.Handler for the restart task operation
func NewRestartTask(ctx *middleware.Context, handler RestartTaskHandler) *RestartTask {
	return &RestartTask{Context: ctx, Handler: handler}
}

/* RestartTask swagger:route POST /tasks/restart restartTask

任务重启

*/
type RestartTask struct {
	Context *middleware.Context
	Handler RestartTaskHandler
}

func (o *RestartTask) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRestartTaskParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
