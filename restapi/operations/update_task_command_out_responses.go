// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// UpdateTaskCommandOutCreatedCode is the HTTP code returned for type UpdateTaskCommandOutCreated
const UpdateTaskCommandOutCreatedCode int = 201

/*UpdateTaskCommandOutCreated 成功

swagger:response updateTaskCommandOutCreated
*/
type UpdateTaskCommandOutCreated struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewUpdateTaskCommandOutCreated creates UpdateTaskCommandOutCreated with default headers values
func NewUpdateTaskCommandOutCreated() *UpdateTaskCommandOutCreated {

	return &UpdateTaskCommandOutCreated{}
}

// WithPayload adds the payload to the update task command out created response
func (o *UpdateTaskCommandOutCreated) WithPayload(payload *models.OK) *UpdateTaskCommandOutCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update task command out created response
func (o *UpdateTaskCommandOutCreated) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTaskCommandOutCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTaskCommandOutInternalServerErrorCode is the HTTP code returned for type UpdateTaskCommandOutInternalServerError
const UpdateTaskCommandOutInternalServerErrorCode int = 500

/*UpdateTaskCommandOutInternalServerError 内部错误

swagger:response updateTaskCommandOutInternalServerError
*/
type UpdateTaskCommandOutInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdateTaskCommandOutInternalServerError creates UpdateTaskCommandOutInternalServerError with default headers values
func NewUpdateTaskCommandOutInternalServerError() *UpdateTaskCommandOutInternalServerError {

	return &UpdateTaskCommandOutInternalServerError{}
}

// WithPayload adds the payload to the update task command out internal server error response
func (o *UpdateTaskCommandOutInternalServerError) WithPayload(payload *models.ErrorModel) *UpdateTaskCommandOutInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update task command out internal server error response
func (o *UpdateTaskCommandOutInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTaskCommandOutInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
