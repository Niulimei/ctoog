// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ctgb/models"
)

// UpdateScheduleCreatedCode is the HTTP code returned for type UpdateScheduleCreated
const UpdateScheduleCreatedCode int = 201

/*UpdateScheduleCreated 成功

swagger:response updateScheduleCreated
*/
type UpdateScheduleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.OK `json:"body,omitempty"`
}

// NewUpdateScheduleCreated creates UpdateScheduleCreated with default headers values
func NewUpdateScheduleCreated() *UpdateScheduleCreated {

	return &UpdateScheduleCreated{}
}

// WithPayload adds the payload to the update schedule created response
func (o *UpdateScheduleCreated) WithPayload(payload *models.OK) *UpdateScheduleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update schedule created response
func (o *UpdateScheduleCreated) SetPayload(payload *models.OK) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateScheduleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateScheduleInternalServerErrorCode is the HTTP code returned for type UpdateScheduleInternalServerError
const UpdateScheduleInternalServerErrorCode int = 500

/*UpdateScheduleInternalServerError 内部错误

swagger:response updateScheduleInternalServerError
*/
type UpdateScheduleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdateScheduleInternalServerError creates UpdateScheduleInternalServerError with default headers values
func NewUpdateScheduleInternalServerError() *UpdateScheduleInternalServerError {

	return &UpdateScheduleInternalServerError{}
}

// WithPayload adds the payload to the update schedule internal server error response
func (o *UpdateScheduleInternalServerError) WithPayload(payload *models.ErrorModel) *UpdateScheduleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update schedule internal server error response
func (o *UpdateScheduleInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateScheduleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
