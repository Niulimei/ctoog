{"version":3,"sources":["lib/constants.js","page/index.js","request/index.js","store/redcer.js","store/index.js","index.js"],"names":["SAVE_HISTORY","Search","Input","TableConfig","bordered","size","expandable","expandedRowRender","record","className","dangerouslySetInnerHTML","__html","description","title","undefined","showHeader","hasData","tableLayout","top","bottom","Page","useState","expandKeys","setExpandKeys","tableLoading","setTableLoading","currentPage","setCurrentPage","useSelector","state","historyDataSource","total","dispatch","useDispatch","columns","useMemo","key","dataIndex","codeId","useParams","getData","useCallback","value","url","params","payloadParams","git_name","limit","offset","id","Promise","resolve","reject","axios","get","then","res","data","catch","err","message","error","type","payload","useEffect","onSearch","handleTableExpand","expanded","newExpandKeys","push","direction","placeholder","style","width","padding","loading","expandedRowKeys","pagination","position","current","showSizeChanger","onChange","margin","defaultState","defaultReducer","action","infoItem","count","store","createStore","redcer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.8579eb30.chunk.js","sourcesContent":["// 保存数据action type\r\nexport const SAVE_HISTORY = 'SAVE_HISTORY';\r\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport { PageHeader, Input, Space, Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { get } from '../request/index'\r\nimport './index.css';\r\nimport { SAVE_HISTORY } from '../lib/constants';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst { Search } = Input;\r\n\r\n// 表格的一些固定配置\r\nconst TableConfig = {\r\n  bordered: false, //是否展示外边框和列边框\r\n  size: 'default',\r\n  expandable: {\r\n    expandedRowRender: record => (\r\n      <p\r\n        className=\"pSty\"\r\n        dangerouslySetInnerHTML={{ __html: record.description }}\r\n      />\r\n    )\r\n  }, //配置展开属性\r\n  title: undefined,//表格标题\r\n  showHeader: true,      //是否显示表头\r\n  hasData: true,\r\n  tableLayout: undefined,//表格元素的 table-layout 属性\r\n  top: \"10%\",\r\n  bottom: 'bottomRight',\r\n}\r\n\r\nconst Page = () => {\r\n  // 表格的行选中\r\n  const [expandKeys, setExpandKeys] = useState([]);\r\n\r\n  // 表格的加载状态\r\n  const [tableLoading, setTableLoading] = useState(true);\r\n\r\n  // 当前分页数\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // 从redux中取数据\r\n  const { historyDataSource, total } = useSelector(state => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const columns = useMemo(() => ([\r\n    {\r\n      title: '名称',\r\n      key: 'name',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '所有人',\r\n      key: 'owner',\r\n      dataIndex: 'owner'\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      key: 'createTime',\r\n      dataIndex: 'createTime'\r\n    },\r\n    {\r\n      title: 'ID',\r\n      key: 'id',\r\n      dataIndex: 'id'\r\n    }, {\r\n      title: '活动状态',\r\n      key: 'historyType',\r\n      dataIndex: 'historyType'\r\n    }\r\n  ]), [])\r\n\r\n  // 取出参数中的ID\r\n  const { codeId } = useParams();\r\n\r\n  // 获取后端数据方法\r\n  const getData = useCallback(value => {\r\n    setTableLoading(true);\r\n\r\n    const payloadParams = {\r\n      git_name: codeId,\r\n      limit: 10,\r\n      offset: 10 * (currentPage - 1),\r\n    }\r\n\r\n    if (value) {\r\n      payloadParams.id = value;\r\n    }\r\n\r\n    get('/gitee-cc/cc_history', payloadParams)\r\n      .then((res) => {\r\n        // 请求最新数据成功清除之前的展开状态\r\n        setExpandKeys([]);\r\n\r\n        setTableLoading(false);\r\n\r\n        dispatch({\r\n          type: SAVE_HISTORY,\r\n          payload: res\r\n        })\r\n      })\r\n      .catch(() => {\r\n        setTableLoading(false);\r\n      })\r\n  }, [codeId, currentPage]); // eslint-disable-line\r\n\r\n  // 初始化加载完成请求数据\r\n  useEffect(getData, [getData])\r\n\r\n  // 回车查询\r\n  const onSearch = useCallback((value) => {\r\n    getData(value);\r\n  }, [getData])\r\n\r\n  // 点击选中展开符号逻辑\r\n  const handleTableExpand = useCallback((expanded, record) => {\r\n    let newExpandKeys = []\r\n    if (expanded) {\r\n      newExpandKeys.push(record.id)\r\n    }\r\n    setExpandKeys(newExpandKeys)\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"已归档历史记录\"\r\n      />\r\n      <Space direction=\"vertical\">\r\n        <Search placeholder=\"请输入ID进行检索\"\r\n          onSearch={onSearch}\r\n          style={{ width: 300, padding: '0 24px' }}\r\n\r\n        />\r\n      </Space>\r\n      <Table\r\n        {...TableConfig}\r\n        loading={tableLoading}\r\n        expandedRowKeys={expandKeys}\r\n        pagination={{ position: [TableConfig.top, TableConfig.bottom] }}\r\n        columns={columns}\r\n        pagination={{\r\n          total,\r\n          position: 'bottom',\r\n          current: currentPage,\r\n          showSizeChanger: false,\r\n          onChange: setCurrentPage\r\n        }}\r\n        dataSource={historyDataSource}\r\n        rowExpandable={record => record.description ? 'Not Expandable' : ''}\r\n        style={{ margin: '20px 0 0 0' }}\r\n        rowKey={record => record.id}\r\n        onExpand={handleTableExpand}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import axios from \"axios\";\r\nimport { message } from 'antd';\r\n\r\nexport function request(config, data, success, fail) {\r\n    axios({\r\n        // 暂时决定后期接口出来将url写死，通过参数获取数据\r\n        url: config,\r\n        params: data\r\n    }).then(\r\n        res => { success(res) }\r\n    ).catch(\r\n        err => { fail(err) }\r\n    )\r\n};\r\n\r\n// get请求\r\nexport function get(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, {\r\n            params: params\r\n        }).then(res => {\r\n            resolve(res.data)\r\n        }).catch(err => {\r\n            reject(err.data)\r\n            message.error(err.message)\r\n        })\r\n    })\r\n};\r\n\r\n// post请求\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, params).then(res => {\r\n            resolve(res.data);\r\n            console.log(\"post---\", res);\r\n        }).catch(err => {\r\n            reject(err.data);\r\n            console.log(\"post---\", err);\r\n        })\r\n    })\r\n};\r\n\r\n// 删除\r\nexport function deleteFn(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url, params).then(res => {\r\n            resolve(res.data);\r\n            console.log(\"del---\", res);\r\n        }).catch(err => {\r\n            reject(err.data)\r\n            console.log(\"del---\", err);\r\n        })\r\n    })\r\n};\r\n\r\n// 更新\r\nexport function put(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url, params)\r\n            .then(res => {\r\n                resolve(res.data);\r\n                console.log(\"put---\", res);\r\n            })\r\n            .catch(err => {\r\n                reject(err.data)\r\n                console.log(\"put---\", err);\r\n            })\r\n    });\r\n};\r\n\r\n// 更新局部资源\r\nexport function patch(url, params = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.patch(url, params).then(res => {\r\n            resolve(res.data)\r\n            console.log(\"patch---\", res);\r\n        }).catch(err => {\r\n            reject(err)\r\n            console.log(\"patch---\", err);\r\n        })\r\n    })\r\n}\r\n\r\n","import { SAVE_HISTORY } from \"../lib/constants\";\r\n\r\nconst defaultState = {\r\n    historyDataSource: [],\r\n    total: 0,\r\n};\r\n\r\nfunction defaultReducer(state = defaultState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SAVE_HISTORY:\r\n            const {\r\n                infoItem: historyDataSource,\r\n                count: total,\r\n            } = payload;\r\n            return {\r\n                ...defaultState,\r\n                historyDataSource,\r\n                total\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default defaultReducer;\r\n","import { createStore } from \"redux\";\r\nimport redcer from \"./redcer\";\r\n\r\n\r\nconst store = createStore(\r\n    redcer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Page from './page';\r\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <Route path=\"/:codeId\" component={Page} />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}