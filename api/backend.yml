swagger: "2.0"
schemes:
  - http
info:
  version: "1.0.0"
  title: "translator"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api"
paths:
  /login:
    post:
      summary: 登录
      description: ''
      operationId: Login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userInfo
          in: body
          description: 用户信息
          required: true
          schema:
            $ref: '#/definitions/UserModel'
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/Authorization'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /logs:
    post:
      summary: 获取日志
      description: ''
      operationId: ListLogs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/LogFilterParamsModel'
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/LogPageInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /users:
    post:
      summary: 开通账户
      description: ''
      operationId: CreateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userInfo
          in: body
          description: 用户信息
          required: true
          schema:
            $ref: '#/definitions/UserModel'
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: 账户列表
      description: ''
      operationId: ListUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          required: true
          default: 0
          type: integer
        - name: offset
          in: query
          required: true
          default: 0
          type: integer
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 账户列表
          schema:
            $ref: '#/definitions/UserPageInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /users/self:
    get:
      summary: 账户
      description: ''
      operationId: GetUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 账户
          schema:
            $ref: '#/definitions/UserInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks:
    post:
      summary: 新建任务
      description: ''
      operationId: CreateTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: taskInfo
          in: body
          description: 任务信息
          required: true
          schema:
            $ref: '#/definitions/TaskModel'
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: 任务列表
      description: ''
      operationId: ListTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          required: true
          default: 0
          type: integer
        - name: offset
          in: query
          required: true
          default: 0
          type: integer
        - name: pvob
          in: query
          required: false
          type: string
        - name: component
          in: query
          required: false
          type: string
        - name: stream
          in: query
          required: false
          type: string
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 任务列表
          schema:
            $ref: '#/definitions/TaskPageInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks/restart:
    post:
      summary: 任务重启
      description: ''
      operationId: RestartTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: restartTrigger
          in: body
          description: 任务重启
          required: true
          schema:
            $ref: '#/definitions/TaskRestart'
      responses:
        '200':
          description: 任务列表
          schema:
            $ref: '#/definitions/TaskPageInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks/cache/{id}:
    delete:
      summary: 任务缓存删除
      description: ''
      operationId: DeleteTaskCache
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks/{id}:
    get:
      summary: 任务详情
      description: ''
      operationId: GetTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 任务信息
          schema:
            $ref: '#/definitions/TaskDetail'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      summary: 任务删除
      description: ''
      operationId: DeleteTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      summary: 更新任务
      description: ''
      operationId: UpdateTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: Authorization
          in: header
          required: true
          type: string
        - name: taskLog
          in: body
          description: 任务信息
          required: true
          schema:
            $ref: '#/definitions/TaskInfoUpdateModel'
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks/cmdout/{log_id}:
    get:
      summary: 任务执行详情
      description: ''
      operationId: GetTaskCommandOut
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "log_id"
          in: "path"
          required: true
          type: "integer"
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 任务执行信息
          schema:
            $ref: '#/definitions/TaskCommandOut'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      summary: 更新任务执行详情
      description: ''
      operationId: UpdateTaskCommandOut
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "log_id"
          in: "path"
          required: true
          type: "integer"
        - name: taskCommandOut
          in: body
          description: 任务信息
          required: true
          schema:
            $ref: '#/definitions/TaskCommandOut'
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /pvobs:
    get:
      summary: pvob列表
      description: ''
      operationId: ListPvob
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: PVOB列表
          schema:
            type: array
            items:
              type: string
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /pvobs/{id}/components:
    get:
      summary: 组件列表
      description: ''
      operationId: ListPvobComponent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
      responses:
        '200':
          description: 组件列表
          schema:
            type: array
            items:
              type: string
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /pvobs/{pvob_id}/components/{component_id}/streams:
    get:
      summary: 流列表
      description: ''
      operationId: ListPvobComponentStream
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "pvob_id"
          in: "path"
          required: true
          type: "string"
        - name: "component_id"
          in: "path"
          required: true
          type: "string"
      responses:
        '200':
          description: 流列表
          schema:
            type: array
            items:
              type: string
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /workers:
    post:
      summary: worker注册和心跳
      description: ''
      operationId: PingWorker
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: workerInfo
          in: body
          description: worker信息
          required: true
          schema:
            $ref: '#/definitions/WorkerModel'
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /schedules:
    post:
      summary: 创建定时任务
      description: ''
      operationId: CreateSchedule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: workerInfo
          in: body
          description: schedule信息
          required: true
          schema:
            $ref: '#/definitions/ScheduleModel'
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: 定时任务列表
      description: ''
      operationId: ListSchedule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          required: true
          default: 0
          type: integer
        - name: offset
          in: query
          required: true
          default: 0
          type: integer
        - name: Authorization
          in: header
          required: true
          type: string
      responses:
        '200':
          description: 定时任务列表
          schema:
            $ref: '#/definitions/SchedulePageInfoModel'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
  /schedules/{id}:
    put:
      summary: 更新定时任务
      description: ''
      operationId: UpdateSchedule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: Authorization
          in: header
          required: true
          type: string
        - name: scheduleInfo
          in: body
          description: 定时任务信息
          required: true
          schema:
            $ref: '#/definitions/ScheduleModel'
      responses:
        '201':
          description: 成功
          schema:
            $ref: '#/definitions/OK'
        '500':
          description: 内部错误
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  UserPageInfoModel:
    type: object
    properties:
      userInfo:
        type: array
        items:
          $ref: '#/definitions/UserInfoModel'
      limit:
        type: integer
      offset:
        type: integer
      count:
        type: integer
  UserInfoModel:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      id:
        type: integer
      role_id:
        type: integer
  LogPageInfoModel:
    type: object
    properties:
      logInfo:
        type: array
        items:
          $ref: '#/definitions/LogInfoModel'
      limit:
        type: integer
      offset:
        type: integer
      count:
        type: integer
  LogInfoModel:
    type: object
    properties:
      level:
        type: string
      action:
        type: string
      position:
        type: string
      message:
        type: string
      user:
        type: string
      id:
        type: integer
      errcode:
        type: integer
      time:
        type: integer
  LogFilterParamsModel:
    type: object
    properties:
      level:
        type: string
      action:
        type: string
      user:
        type: string
      offset:
        type: integer
      limit:
        type: integer
  UserModel:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      role_id:
        type: integer
  TaskPageInfoModel:
    type: object
    properties:
      taskInfo:
        type: array
        items:
          $ref: '#/definitions/TaskInfoModel'
      limit:
        type: integer
      offset:
        type: integer
      count:
        type: integer
  TaskInfoModel:
    type: object
    properties:
      pvob:
        type: string
      component:
        type: string
      dir:
        type: string
      keep:
        type: string
      gitRepo:
        type: string
      gitEmail:
        type: string
      status:
        type: string
      lastCompleteDateTime:
        type: string
      id:
        type: integer
      includeEmpty:
        type: boolean
  TaskInfoUpdateModel:
    type: object
    properties:
      pvob:
        type: string
      component:
        type: string
      dir:
        type: string
      ccUser:
        type: string
      ccPassword:
        type: string
      gitURL:
        type: string
      gitUser:
        type: string
      gitPassword:
        type: string
      gitEmail:
        type: string
      status:
        type: string
      lastCompleteDateTime:
        type: string
      logID:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      duration:
        type: string
      includeEmpty:
        type: boolean
      matchInfo:
        type: array
        items:
          $ref: '#/definitions/TaskMatchInfo'
  TaskMatchInfo:
    type: object
    properties:
      stream:
        type: string
      gitBranch:
        type: string
  TaskModel:
    type: object
    properties:
      pvob:
        type: string
      component:
        type: string
      dir:
        type: string
      keep:
        type: string
      ccUser:
        type: string
      ccPassword:
        type: string
      gitURL:
        type: string
      gitUser:
        type: string
      gitPassword:
        type: string
      gitEmail:
        type: string
      matchInfo:
        type: array
        items:
          $ref: '#/definitions/TaskMatchInfo'
      includeEmpty:
        type: boolean
  TaskRestart:
    type: object
    properties:
      id:
        type: integer
  TaskLogInfo:
    type: object
    properties:
      logID:
        type: string
      status:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      duration:
        type: string
  TaskDetail:
    type: object
    properties:
      taskModel:
        $ref: '#/definitions/TaskModel'
      logList:
        type: array
        items:
          $ref: '#/definitions/TaskLogInfo'
  TaskCommandOut:
    type: object
    properties:
      log_id:
        type: integer
      content:
        type: string
  ErrorModel:
    type: object
    properties:
      message:
        type: string
        example: error message
      code:
        type: integer
        example: 400
  WorkerModel:
    type: object
    properties:
      host:
        type: string
        example: 192.168.1.1
      port:
        type: integer
        example: 80
  ScheduleModel:
    type: object
    properties:
      id:
        type: integer
      task_id:
        type: integer
      schedule:
        type: string
      status:
        type: string
  SchedulePageInfoModel:
    type: object
    properties:
      taskInfo:
        type: array
        items:
          $ref: '#/definitions/ScheduleModel'
      limit:
        type: integer
      offset:
        type: integer
      count:
        type: integer
  OK:
    type: object
    properties:
      message:
        type: string
  Authorization:
    type: object
    properties:
      token:
        type: string
