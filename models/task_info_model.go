// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TaskInfoModel task info model
//
// swagger:model TaskInfoModel
type TaskInfoModel struct {

	// component
	Component JsonNullString `json:"component,omitempty"`

	// dir
	Dir JsonNullString `json:"dir,omitempty"`

	// git email
	GitEmail JsonNullString `json:"gitEmail,omitempty" db:"git_email"`

	// git repo
	GitRepo JsonNullString `json:"gitRepo,omitempty" db:"git_url"`

	// gitee group
	GiteeGroup JsonNullString `json:"giteeGroup,omitempty" db:"gitee_group"`

	// gitee project
	GiteeProject JsonNullString `json:"giteeProject,omitempty" db:"gitee_project"`

	// gitee token
	GiteeToken JsonNullString `json:"giteeToken,omitempty" db:"gitee_token"`

	// gitignore
	Gitignore JsonNullString `json:"gitignore,omitempty"`

	// gitlab group
	GitlabGroup JsonNullString `json:"gitlabGroup,omitempty" db:"gitlab_group"`

	// gitlab project
	GitlabProject JsonNullString `json:"gitlabProject,omitempty" db:"gitlab_project"`

	// gitlab token
	GitlabToken JsonNullString `json:"gitlabToken,omitempty" db:"gitlab_token"`

	// id
	ID JsonNullInt64 `json:"id,omitempty"`

	// include empty
	IncludeEmpty JsonNullBool `json:"includeEmpty,omitempty" db:"include_empty"`

	// keep
	Keep JsonNullString `json:"keep,omitempty"`

	// last complete date time
	LastCompleteDateTime JsonNullString `json:"lastCompleteDateTime,omitempty" db:"last_completed_date_time"`

	// model type
	ModelType JsonNullString `json:"modelType,omitempty" db:"model_type"`

	// pvob
	Pvob JsonNullString `json:"pvob,omitempty"`

	// status
	Status JsonNullString `json:"status,omitempty"`

	// svn Url
	SvnURL JsonNullString `json:"svnUrl,omitempty" db:"svn_url"`
}

// Validate validates this task info model
func (m *TaskInfoModel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this task info model based on context it is used
func (m *TaskInfoModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TaskInfoModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskInfoModel) UnmarshalBinary(b []byte) error {
	var res TaskInfoModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
